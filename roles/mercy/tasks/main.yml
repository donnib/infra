---
- name: ensure hostname is set correctly
  hostname:
    name: "{{ hostname }}"

- name: create config directories
  file:
    path: /home/{{ main_username }}/{{ item }}
    state: directory
    owner: "{{ main_username }}"
    group: "{{ main_groupname }}"
  loop:
    - scripts
    - tg
    - '.local/share'

### Install TG bot
- name: Clone TG CLI GitHub Repo
  git:
    repo: https://github.com/kenorb-contrib/tg.git
    dest: /home/{{ main_username }}/tg
    accept_hostkey: true
    force: true
  become: yes

- name: Install requests python package
  pip:
    name: requests
    executable: /usr/bin/pip3

- name: set TG folder permissions
  file:
    path: /home/{{ main_username }}/tg
    state: directory
    recurse: true
    owner: "{{ main_username }}"
    group: "{{ main_groupname }}"

- name: Make TG CLI
  shell: ./configure --enable-python && make
  args:
    chdir: "/home/{{main_username}}/tg"

### Install HO bot
- name: Clone HO Bot GitHub Repo
  git:
    repo: https://github.com/hangoutsbot/hangoutsbot.git
    dest: /home/{{ main_username }}/hangoutsbot
    accept_hostkey: true
    force: true

- name: set hangoutsbot folder permissions
  file:
    path: /home/{{ main_username }}/hangoutsbot
    state: directory
    recurse: true
    owner: "{{ main_username }}"
    group: "{{ main_groupname }}"

- name: Install Requirements
  command: pip3 install -r requirements.txt
  args:
    chdir: "/home/{{main_username}}/hangoutsbot"
  become: yes
  become_user: root

- name: copy HO files from backup
  copy:
    src: /mnt/Backup/{{item.src}}
    dest: "/home/{{ main_username }}/{{item.dest}}"
    remote_src: true
    owner: "{{ main_username }}"
    group: "{{ main_username }}"
    mode: preserve
  with_items:
    - { src: 'plugins', dest: 'hangoutsbot/hangupsbot' }
    - { src: 'hangupsbot', dest: '.local/share' }
    - { src: '.telegram-cli', dest: '' }

- name: Copy systemd service files
  template:
    src: "{{item.src}}"
    dest: /etc/systemd/system/{{item.dest}}
    owner: "{{ main_username }}"
    group: "{{ main_username }}"
    mode: 0644
  with_items:
    - { src: 'systemd/bar.service.j2', dest: 'bar.service' }
    - { src: 'systemd/math.service.j2', dest: 'math.service' }
    - { src: 'systemd/phantom.service.j2', dest: 'phantom.service' }
    - { src: 'systemd/tg-sync.service.j2', dest: 'tg-sync.service' }

- name: Copy scripts files
  template:
    src: "{{item.src}}"
    dest: /home/{{ main_username }}/{{item.dest}}
    owner: "{{ main_username }}"
    group: "{{ main_username }}"
    mode: +x
  with_items:
    - { src: 'scripts/RunBARBot.sh.j2', dest: 'scripts/RunBARBot.sh' }
    - { src: 'scripts/RunMATHBot.sh.j2', dest: 'scripts/RunMATHBot.sh' }
    - { src: 'scripts/RunPhantomBot.sh.j2', dest: 'scripts/RunPhantomBot.sh' }
    - { src: 'scripts/media_backup.sh.j2', dest: 'scripts/media_backup.sh' }
    - { src: 'scripts/run.sh.j2', dest: 'scripts/run.sh' }
    - { src: 'scripts/tg_ho.py.j2', dest: 'scripts/tg_ho.py' }

- name: Enable bot services
  systemd:
    enabled: true
    daemon-reload: true
    state: started
    name: "{{item}}"
  loop:
    - bar
    - phantom
    - math
    - tg-sync

- name: Main User Cronjobs
  cron:
    user: "{{ main_username }}"
    name: "{{ item.name }}"
    job: "{{ item.job }}"
    hour: "{{ item.hour }}"
    minute: "{{ item.minute }}"
    weekday: "{{ item.weekday }}"
    state: present
  with_items:
    - { job: "systemctl restart bar.service", name: "Restart BARbot", hour: "3", minute: "0", weekday: "*" }
    - { job: "systemctl restart math.service", name: "Restart MATHBot", hour: "3", minute: "1", weekday: "*" }
    - { job: "systemctl restart phantom.service", name: "Restart PhantomBot", hour: "3", minute: "2", weekday: "*" }
    - { job: "systemctl restart tg-sync.service", name: "Restart TG Sync", hour: "3", minute: "3", weekday: "*" }
    - { job: "/home/{{ main_username }}/scripts/media_backup.sh", name: "Backup Media", hour: "2", minute: "59", weekday: "*" }